<template>
    <div :class="classObject">
        <div :class="$style.menu_toggle_title">
            <div :class="$style.title_text">{{ title }}</div>
            <base-number-budge :class="$style.title_num" v-if="num">{{ num }}</base-number-budge>
            <base-icon
                v-if="togglable"
                :class="[{ [$style.arrow_open]: myOpen }, $style.title_arrow]"
                @click="click"
                name="ub-arrow-down"
                size="14px"
                color="<%- icon.color %>"
            />
        </div>
        <slot />
    </div>
</template>
<script>
  export default {
    name: 'BaseSidebarListTitle',
    props: {
      title: {
        style: String,
        default: ''
      },
      num: {
        type: Number,
        default: null
      },
      togglable: {
        type: Boolean,
        default: false
      },
      open: {
        type: Boolean,
        default: false
      }
    },
    data() {
      return {
        myOpen: this.$props.togglable ? this.$props.open : true
      }
    },
    computed: {
      classObject() {
        return [
          this.$style.menu_toggle,
          { [this.$style.menu_toggle_open]: this.myOpen }
        ]
      }
    },
    methods: {
      click() {
        this.myOpen = !this.myOpen
      }
    }
  }
</script>
<style lang="scss" module>
    .menu_toggle {
        overflow: hidden;
        transition: 0.4s;
        transition-delay: 0;
        transition-timing-function: linear;
        max-height: 46px;
        font-weight: bold;
    }
    .menu_toggle {
        <%- this.background(background) %>
        border-bottom: 1px solid rgba(0,0,0,.06);
    }
    .menu_toggle_open {
        max-height: 1200px;
    }
    .menu_toggle_title {
        <%- this.background(background) %>
        padding: 16px;
        height: 46px;
        box-sizing: border-box;
        display: flex;
        align-items: center;
    }
    .title_text {
        <%- this.fontColor(fontColor) %>
        flex: 1;
    }
    .title_arrow {
        margin: 0 0 0 16px;
        cursor: pointer;
        transition-delay: 0;
        transition: 0.4s;
    }
    .arrow_open {
        transform: rotate(180deg);
    }
</style>
