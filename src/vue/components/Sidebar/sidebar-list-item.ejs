<template>
    <base-router-link
        :to="to"
        :class="classObject"
        v-on="$listeners"
        active-class="link-active"
        exact-active-class="link-exact-active"
    >
        <div :class="$style.menu_item_title">
            <base-icon :class="$style.icon" :name="icon" size="20" v-if="icon" />
            <span>
                <slot />
            </span>
        </div>
        <base-number-budge v-if="num">{{ num }}</base-number-budge>
    </base-router-link>
</template>
<script>
  export default {
    name: 'BaseSidebarListItem',
    props: {
      to: {
        type: [String, Object],
        default: null
      },
      num: {
        type: Number,
        default: null
      },
      icon: {
        type: String,
        default: null
      },
      exact: {
        type: Boolean,
        default: false
      }
    },
    computed: {
      classObject() {
        return [
          this.$style.menu_item,
          {
            only_exact: this.exact
          }
        ]
      }
    }
  }
</script>
<style lang="scss" module>
    .menu_item {
        position: relative;
        height: 46px;
        <%- this.fontColor(fontColor) %>
        <%- this.fontWeight(fontWeight) %>
        <%- this.background(background) %>
        display: flex;
        align-items: center;
        font-size: 14px;

    }
    <% if (variant === 'round') { %>
    .menu_item {
        border-radius: 10px;
        height: 40px;
        box-sizing: border-box;
        padding: 8px;
        margin: 8px;
        text-decoration: none;
        transition: 0.4s;

    }
    <% } %>
    <% if (variant === 'default') { %>
    .menu_item {
        box-sizing: border-box;
        padding: 16px;
        text-decoration: none;
        transition: 0.4s;
    }
    .menu_item:before {
        position: absolute;
        top: 11px;
        right: 0;
        content: '';
        display: block;
        width: 4px;
        <%- this.background(background) %>
        border-radius: 4px 0 0 4px;
        height: 22px;
        transition: 0.4s;
        transform-origin: center;
        transform: scaleY(0);
    }
    .menu_item:global.link-exact-active:before {
        transform: scaleY(1);
    }
    .menu_item:after {
        content: '';
        display: block;
        width: 90%;
        height: 1px;
        background: rgba(255, 255, 255, 0.1);
        position: absolute;
        bottom: 0;
        right: 0;
    }
    <% } %>
    .menu_item:global.link-exact-active.only_exact.link-active {
        font-weight: bold;
        <%- this.background(active.background) %>
        <%- this.fontColor(active.fontColor) %>
    }
    .menu_item:global.link-active {
        font-weight: bold;
        cursor: default;
        <%- this.background(active.background) %>
        <%- this.fontColor(active.fontColor) %>
    }
    .menu_item:global.link-active.only_exact {
        font-weight: normal;
        cursor: pointer;
        <%- this.background(background) %>
        <%- this.fontColor(fontColor) %>
    }
    .icon {
        margin-right: 8px;
        fill: <%- icon.color %>;
    }
    .menu_item:global.link-exact-active {
        :local(.icon) {
            fill: <%- active.icon.color %>;
        }
    }
    .menu_item_title {
        display: flex;
        flex: 1;
        align-items: center;
    }
    /* hover controll */
    /* default hover */
    .menu_item:hover {
        <%- this.background(hover.background) %>
        <%- this.fontColor(hover.fontColor) %>
        <%- this.fontWeight(hover.fontWeight) %>
    }
</style>
